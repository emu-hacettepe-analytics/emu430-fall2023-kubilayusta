---
title: "Assignment 1"
author: Kubilay Usta
format:
  html:
    code-tools: true
    code-fold: true
---

\# Assignment 1

My first assignment has three parts.

## (a) **R vs Python \| Which is Better for Data Analysis?**

![](images/Python_vs._R_for_Data_Science__What_s_the_Difference__klxnwh.webp){width="754" height="275"}

|               |                                                                           |               |                                                                   |
|----------|---------------------------|---------|----------------------------|
| **R**         | \- Programming language developed for statistical analysis                | **Python**    | \- It is a general-purpose programming language                   |
|               | \- Developed in 1993 and used by statisticians, data miners, and analysts |               | \- Quickly becoming one of the most popular programming languages |
|               | \- Used by companies like Uber, Facebook, and Google                      |               | \- Used by companies like Google, Facebook, and Netflix           |
| **Libraries** | \- **Data Collection:** Rcrawler, readxl, readr, RCurl                    | **Libraries** | \- **Data Collection:** Pandas, Requests, BeautifulSoup           |
|               | \- **Data Wrangling/Exploration:** Dplyr, sqldf, data.table, readr, tidyr |               | \- **Data Wrangling/Exploration:** Pandas, Numpy, Scipy           |
|               | \- **Data Visualization:** Ggplot2, ggvis, plotly, Esquisse, Shiny        |               | \- **Data Visualization:** Matplotlib, Seaborn, Plotly            |
| **The Code**  | \- Easy/Medium difficulty to pick up                                      | **The Code**  | \- Easy/Medium difficulty to pick up and learn                    |
|               | \- Can be difficult to maintain                                           |               | \- Easier to write maintainable, large-scale code                 |

## (b) **Differences between R and Python**

1.  **Variable Assignment**

    -   **R is using " \<- " operator for assignment.**

        -   **Code Example:**

            x \<- c(1,2,3,4,5)

            sum_x \<- sum(x)

    -   **Python is using " = " operator for assignment.**

        -   **Code Example:**

            x = \[1,2,3,4,5\]

            sum_x = sum(x)

2.  **Function Definitions:**

    -   **Functions are defined using the " function " keyword in R.**

        -   **Code Example:**

            mean \<- function(arg)

            {

            sum(arg) / length(arg)

            }

    -   **Functions are defined using the " def " keyword in Python.**

        -   **Code Example:**

            def mean(arg):

            {

            sum(arg) / len(arg)

            }

3.  **Syntax differences in code chunks:**

    -   **In R we use " { } " syntax for code chunk.**

        -   **Code Example:**

            if (number %% 2 == 0){

            print("Number is even")

            } else {

            print("number is not even")

            }

    -   **In Python we use " : " syntax for code chunk.**

        -   **Code Example:**

            if (number %% 2 == 0):

            print("Number is even")

            else:

            print("number is not even")

## (c) Organizing Data Set

-   **Installing Na_Example**

```{r}
#| output: false
install.packages("dslabs", repos = " https://CRAN.R-project.org/package=dslabs")
library("dslabs")
data(package = "dslabs")
list.files(system.file("script", package = "dslabs"))
data("admissions")
library(tidyverse)
zero_example <- ifelse(is.na(na_example), 0, na_example)
```

-   **Datas with NA**

```{r}
print(na_example) 

```

# 

-   **Datas with ZERO**

```{r}
print(zero_example)
```

\
